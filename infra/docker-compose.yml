version: '3.7'

services:
  reverse-proxy:
    image: traefik:cantal
    restart: always
    container_name: traefik
    networks:
      - traefik
    command: 
      --api.insecure=true
      --api.dashboard=true
      --providers.docker
      --providers.docker.endpoint=unix:///var/run/docker.sock
      --providers.docker.exposedbydefault=false
      --providers.docker.network=traefik
      --entrypoints.web.address=:80
      --entrypoints.websecure.address=:443
      --log.level=DEBUG
      --log.filePath=/logs/traefik.log
      --log.format=json
      --certificatesresolvers.cloudflare.acme.email=aurelien.arino@gmail.com
      --certificatesresolvers.cloudflare.acme.storage=/letsencrypt/acme.json
      --certificatesresolvers.cloudflare.acme.keyType=RSA4096
      --certificatesresolvers.cloudflare.acme.dnsChallenge=true
      --certificatesresolvers.cloudflare.acme.dnsChallenge.provider=cloudflare
      --certificatesresolvers.cloudflare.acme.dnsChallenge.resolvers=1.1.1.1:53,8.8.8.8:53
      # --certificatesresolvers.cloudflare.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/localtime:/etc/localtime
      - traefik-certs:/letsencrypt
      - traefik-logs:/logs
    environment:
      - CLOUDFLARE_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
    labels:
      traefik.enable: true
      traefik.http.middlewares.https-redirect.redirectscheme.scheme: https
      traefik.http.middlewares.basic-auth.basicauth.users: arinono:$$2y$$10$$p.ZZwGFk.3eJWbRSXjF6suPAVT91Q9Bk3ey1X3DHxRr6wuibEy9QS

      traefik.http.routers.http-catchall.middlewares: https-redirect
      traefik.http.routers.http-catchall.rule: hostregexp(`{host:.+}`)
      traefik.http.routers.http-catchall.entrypoints: web
      
      traefik.http.routers.traefik.entrypoints: websecure
      traefik.http.routers.traefik.middlewares: basic-auth
      traefik.http.routers.traefik.rule: Host(`traefik.${DOMAINNAME}`)
      traefik.http.routers.traefik.tls: true
      traefik.http.routers.traefik.tls.certresolver: cloudflare
      traefik.http.services.traefik.loadbalancer.server.port: 8080

  portainer:
    image: portainer/portainer
    restart: always
    container_name: portainer
    environment:
      - TZ=${TZ}
    networks:
      - traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime
      - portainer-data:/data
    labels:
      traefik.enable: true
      traefik.http.routers.portainer.entrypoints: websecure
      traefik.http.routers.portainer.rule: Host(`portainer.${DOMAINNAME}`)
      traefik.http.routers.portainer.tls: true
      traefik.http.routers.portainer.tls.certresolver: cloudflare
      traefik.http.services.portainer.loadbalancer.server.port: 9000

networks:
  traefik:
    external: true

volumes:
  traefik-certs:
    driver: local
    driver_opts: 
      type: none
      o: bind
      device: /var/data/docker-host/infra/traefik/certs
  traefik-logs:
    driver: local
    driver_opts: 
      type: none
      o: bind
      device: /var/data/docker-host/infra/traefik/logs
  portainer-data:
    driver: local
    driver_opts: 
      type: none
      o: bind
      device: /var/data/docker-host/infra/portainer
